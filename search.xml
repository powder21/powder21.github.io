<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>tensorflow保存和加载网络参数</title>
      <link href="/2018/07/24/tensorflow%E5%8A%A0%E8%BD%BD%E6%8C%87%E5%AE%9A%E7%BD%91%E7%BB%9C%E5%8F%82%E6%95%B0/"/>
      <url>/2018/07/24/tensorflow%E5%8A%A0%E8%BD%BD%E6%8C%87%E5%AE%9A%E7%BD%91%E7%BB%9C%E5%8F%82%E6%95%B0/</url>
      <content type="html"><![CDATA[<h3 id="保存参数"><a href="#保存参数" class="headerlink" title="保存参数"></a>保存参数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">saver = tf.train.Saver()</span><br><span class="line">saver.save(sess, <span class="string">'model.ckpt'</span>)</span><br></pre></td></tr></table></figure><h3 id="加载全部参数（默认）"><a href="#加载全部参数（默认）" class="headerlink" title="加载全部参数（默认）"></a>加载全部参数（默认）</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">saver.restore(sess, <span class="string">'model.ckpt'</span>)</span><br></pre></td></tr></table></figure><h3 id="加载指定参数"><a href="#加载指定参数" class="headerlink" title="加载指定参数"></a>加载指定参数</h3><p><strong>ckpt文件中包含了在训练中所有的参数，但是在test时可能只需要使用部分网络就可以，这时候就需要只加载部分变量。</strong><br>指定的方式就是根据变量名进行区分，所以在训练之前声明各个变量时scope应该区分好，尽可能自己命名变量的name参数。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> tf.variable_scope(name):</span><br><span class="line">w = tf.get_variable(<span class="string">'w'</span>, shape, initializer)</span><br><span class="line"><span class="keyword">with</span> tf.variable_scope(name):</span><br><span class="line">conv1 = conv2d(input)</span><br><span class="line">conv2 = conv2d(conv1)</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p><p>之后就可以从.ckpt中得到变量<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 几种variable</span></span><br><span class="line">tf.contrib.framework.get_variables_to_restore()</span><br><span class="line">tf.all_variables()</span><br><span class="line">tf.trainable_varialbes()</span><br></pre></td></tr></table></figure></p><p>根据变量名加载指定变量<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">variables = trainable_varialbes <span class="comment"># 所有可加载的变量</span></span><br><span class="line">variable_to_restore = [v <span class="keyword">for</span> v <span class="keyword">in</span> variables <span class="keyword">if</span> <span class="string">'xxx'</span> <span class="keyword">in</span> v.name] <span class="comment"># if 后是任意可筛选的条件即可</span></span><br><span class="line">saver = tf.train.Saver(variable_to_restore)</span><br><span class="line">saver.restore(sess, <span class="string">'model.ckpt'</span>)</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
        <tags>
            
            <tag> tensorflow </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>博客搭好了，纪念一下</title>
      <link href="/2018/07/15/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%A5%BD%E4%BA%86%EF%BC%8C%E7%BA%AA%E5%BF%B5%E4%B8%80%E4%B8%8B/"/>
      <url>/2018/07/15/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%A5%BD%E4%BA%86%EF%BC%8C%E7%BA%AA%E5%BF%B5%E4%B8%80%E4%B8%8B/</url>
      <content type="html"><![CDATA[<p>昨晚想起来博客这件事已经是10点，一开始入手jekyll，但总是有同步慢、网页404等一系列问题。今天转入Hexo，感觉好用很多。花了一下午加一晚上配置好了一些布局，之后可以专注于写一些博客了。</p><h3 id="下面是hex的主要语法"><a href="#下面是hex的主要语法" class="headerlink" title="下面是hex的主要语法"></a>下面是hex的主要语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new ***</span><br></pre></td></tr></table></figure><p>会在source/_post下建立***.md文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></p><p>是将本地更改上传至github、站点生效的命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure></p><p>可以在本地预览变更，但个别变更如：description必须push至github才能生效</p><h3 id="下面是一些参考网址"><a href="#下面是一些参考网址" class="headerlink" title="下面是一些参考网址"></a>下面是一些参考网址</h3><ol><li><a href="https://reuixiy.github.io/technology/computer/computer-aided-art/2017/06/09/hexo-next-optimization.html" target="_blank" rel="noopener">配置及说明</a></li><li><a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown" target="_blank" rel="noopener">markdown语法</a></li><li><a href="https://www.zybuluo.com/codeep/note/163962#8%E5%A6%82%E4%BD%95%E8%BE%93%E5%85%A5%E7%A7%AF%E5%88%86" target="_blank" rel="noopener">markdown公式</a></li></ol>]]></content>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
